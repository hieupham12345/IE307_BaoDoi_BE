import { autoService, singleton } from 'knifecycle';
import { printStackTrace, YError } from 'yerror';
function noop() {
    return undefined;
}
/* Architecture Note #1.6: Importer

The `importer` service is just proxying [`import`
](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/import)
 in a stubbable manner.
*/
export default singleton(autoService(initImporter));
/**
 * Allow to import ES modules.
 * @param  {string} path
 * The module path
 * @return {Promise<Object>}
 * A promise of an imported module.
 */
async function initImporter({ log = noop, }) {
    const importer = async (path) => {
        log('debug', `üõÇ - Dynamic import of "${path}".`);
        try {
            return await import(path);
        }
        catch (err) {
            log('debug', `‚ö†Ô∏è - Got a runtime import error for "${path}" !`);
            log('debug-stack', printStackTrace(err));
            throw YError.wrap(err, 'E_RUNTIME_IMPORT_FAILURE', path);
        }
    };
    log('debug', 'üõÇ - Initializing the importer!');
    return importer;
}
//# sourceMappingURL=importer.js.map